stages:
  - build
  - test
  - deploy

variables:
  CI_REGISTRY_IMAGE: "registry.gitlab.com/nangstywn/metanarasi"
  DOCKER_TLS_CERTDIR: "/certs"

# Build Docker images and push to GitLab Container Registry
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:php-latest .
    - docker push $CI_REGISTRY_IMAGE:php-latest

# Optional: Run tests
test:
  stage: test
  image: $CI_REGISTRY_IMAGE:php-latest
  script:
    - echo "Running tests..."
    - composer install --no-interaction
    - php artisan test

# Deploy to production
deploy_prod:
  stage: deploy
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - apk add --no-cache openssh-client
  script:
    - echo "Deploying to production..."
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $PROD_SERVER_IP >> ~/.ssh/known_hosts
    
    # Copy the production compose file to the server
    - scp docker-compose.yml $PROD_SERVER_USER@$PROD_SERVER_IP:/app/docker-compose.yml
    
    # Pull the latest image and restart services
    - ssh $PROD_SERVER_USER@$PROD_SERVER_IP "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker-compose -f /app/docker-compose.yml down &&
        docker-compose -f /app/docker-compose.yml pull php &&
        docker-compose -f /app/docker-compose.yml up -d
      "